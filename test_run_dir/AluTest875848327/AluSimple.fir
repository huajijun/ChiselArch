circuit AluSimple :
  module AluSimple :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip rs1 : UInt<8>, flip rs2 : UInt<8>, flip alu_op : UInt<4>, out : UInt<8>, sum : UInt<8>}

    node shamt = bits(io.rs2, 4, 0) @[Alu.scala 41:27]
    node _T = add(io.rs1, io.rs2) @[Alu.scala 47:44]
    node _T_1 = tail(_T, 1) @[Alu.scala 47:44]
    node _T_2 = sub(io.rs1, io.rs2) @[Alu.scala 48:44]
    node _T_3 = tail(_T_2, 1) @[Alu.scala 48:44]
    node _T_4 = dshr(io.rs1, shamt) @[Alu.scala 49:44]
    node _T_5 = dshl(io.rs1, shamt) @[Alu.scala 50:44]
    node _T_6 = asSInt(io.rs1) @[Alu.scala 51:44]
    node _T_7 = asSInt(io.rs2) @[Alu.scala 51:60]
    node _T_8 = lt(_T_6, _T_7) @[Alu.scala 51:51]
    node _T_9 = lt(io.rs1, io.rs2) @[Alu.scala 52:45]
    node _T_10 = and(io.rs1, io.rs2) @[Alu.scala 53:44]
    node _T_11 = or(io.rs1, io.rs2) @[Alu.scala 54:43]
    node _T_12 = xor(io.rs1, io.rs2) @[Alu.scala 55:44]
    node _T_13 = eq(UInt<4>("h0"), io.alu_op) @[Mux.scala 80:60]
    node _T_14 = mux(_T_13, _T_1, io.rs2) @[Mux.scala 80:57]
    node _T_15 = eq(UInt<4>("h1"), io.alu_op) @[Mux.scala 80:60]
    node _T_16 = mux(_T_15, _T_3, _T_14) @[Mux.scala 80:57]
    node _T_17 = eq(UInt<4>("h9"), io.alu_op) @[Mux.scala 80:60]
    node _T_18 = mux(_T_17, _T_4, _T_16) @[Mux.scala 80:57]
    node _T_19 = eq(UInt<4>("h8"), io.alu_op) @[Mux.scala 80:60]
    node _T_20 = mux(_T_19, _T_5, _T_18) @[Mux.scala 80:57]
    node _T_21 = eq(UInt<4>("h5"), io.alu_op) @[Mux.scala 80:60]
    node _T_22 = mux(_T_21, _T_8, _T_20) @[Mux.scala 80:57]
    node _T_23 = eq(UInt<4>("h7"), io.alu_op) @[Mux.scala 80:60]
    node _T_24 = mux(_T_23, _T_9, _T_22) @[Mux.scala 80:57]
    node _T_25 = eq(UInt<4>("h2"), io.alu_op) @[Mux.scala 80:60]
    node _T_26 = mux(_T_25, _T_10, _T_24) @[Mux.scala 80:57]
    node _T_27 = eq(UInt<4>("h3"), io.alu_op) @[Mux.scala 80:60]
    node _T_28 = mux(_T_27, _T_11, _T_26) @[Mux.scala 80:57]
    node _T_29 = eq(UInt<4>("h4"), io.alu_op) @[Mux.scala 80:60]
    node _T_30 = mux(_T_29, _T_12, _T_28) @[Mux.scala 80:57]
    node _T_31 = eq(UInt<4>("ha"), io.alu_op) @[Mux.scala 80:60]
    node _T_32 = mux(_T_31, io.rs1, _T_30) @[Mux.scala 80:57]
    io.out <= _T_32 @[Alu.scala 43:16]
    node _T_33 = bits(io.alu_op, 0, 0) @[Alu.scala 60:41]
    node _T_34 = sub(UInt<1>("h0"), io.rs2) @[Alu.scala 60:46]
    node _T_35 = tail(_T_34, 1) @[Alu.scala 60:46]
    node _T_36 = mux(_T_33, _T_35, io.rs2) @[Alu.scala 60:31]
    node _T_37 = add(io.rs1, _T_36) @[Alu.scala 60:26]
    node _T_38 = tail(_T_37, 1) @[Alu.scala 60:26]
    io.sum <= _T_38 @[Alu.scala 60:16]

